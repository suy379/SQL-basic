USE EDU

DROP TABLE [MEM_TABLE]
----------- DDL ---------------
CREATE TABLE [MEM_TABLE] (
[ID] VARCHAR(20) PRIMARY KEY,
[NAME] VARCHAR(20),
[GENDER] VARCHAR(2),
[AGE] INT,
[JOINMONEY] MONEY,
[JOINDATE] DATE NOT NULL,
[CAMPAIGN] BIT
)

--ADD A COLUMN
ALTER TABLE MEM_TABLE ADD [WEIGHT] REAL

--ALTER [WEIGHT] COLUMN'S TYPE: REAL -> INT
ALTER TABLE MEM_TABLE ALTER COLUMN [WEIGHT] INT

--ALTER [WEIGHT] COLUMN'S NAME: 따옴표 꼭 써주기 
SP_RENAME 'MEM_TABLE.WEIGHT', 'weight(kg)'

--CHANGE TABLE NAME
SP_RENAME 'MEM_TABLE', 'MEMBER'

--SHOW TABLE
SELECT * FROM MEMBER

--DROP TABLE'S ROW ALL
TRUNCATE TABLE MEMBER
SELECT * FROM MEMBER

--DROP THE TABLE
DROP TABLE MEMBER



------------ DML -------------
CREATE TABLE [MEM_TABLE] (
[ID] VARCHAR(20) PRIMARY KEY,
[NAME] VARCHAR(20),
[GENDER] VARCHAR(2),
[AGE] INT,
[JOINMONEY] MONEY,
[JOINDATE] DATE NOT NULL,
[CAMPAIGN] BIT
)

--INSERT DATA
INSERT INTO MEM_TABLE VALUES ('A001', 'Chris', 'M', 28, 10000, '2022-05-19', 1);
INSERT INTO MEM_TABLE VALUES ('A002', 'Sally', 'F', 21, 30000, '2022-02-25', 0);
INSERT INTO MEM_TABLE VALUES ('A003', 'Judith', 'F', 32, 500000, '2019-07-01', 1);
INSERT INTO MEM_TABLE VALUES ('A004', 'John', 'M', 25, 15000, '2020-06-11', NULL)

SELECT * FROM MEM_TABLE 

--PRIMARY KEY ERROR
INSERT INTO MEM_TABLE VALUES ('A001', 'John', 'M', 25, 15000, '2020-06-11', 1)

--NOT NULL CONSTRAINT ERROR
INSERT INTO MEM_TABLE VALUES ('A004', 'John', 'M', 25, 15000, NULL, 1)

--SELECT DATA
SELECT * FROM MEM_TABLE 

--SELECT DATA(USE ANOTHER COLUMN NAME) & CHANGE COLUMN ORDER
SELECT ID, NAME AS 성명, JOINDATE, AGE
FROM MEM_TABLE 

--UPDATE DATA
--CHANGE ALL DATA'S AGE 30
UPDATE MEM_TABLE 
SET AGE = 30 

SELECT * FROM MEM_TABLE 

--CHANGE AGE 31 WHEN ID = A001 
UPDATE MEM_TABLE 
SET AGE = 31
WHERE ID = 'A001'

SELECT * FROM MEM_TABLE 

--DELETE DATA (DON'T DO!)
DELETE MEM_TABLE 

--DELETE DATA WHEN ID = A004
DELETE MEM_TABLE --원래는 DELETE FROM MEM_TABLE 인데 이것도 되네..?
WHERE ID = 'A004'

SELECT * FROM MEM_TABLE 

--TRUNCATE TABLE (DON'T DO!)
TRUNCATE TABLE MEM_TABLE
SELECT * FROM MEM_TABLE 

--DROP TABLE (DON'T DO!)
DROP TABLE MEM_TABLE 

SELECT * FROM MEM_TABLE --아예 DROP되어서 에러가 난다 


------------ DCL -----------

-- GRANT ADMIN (DON'T DO)
GRANT SELECT, INSERT, UPDATE, DELETE ON MEM_TABLE TO MWS WITH GRANT OPTION

--REVOKE ADMINT (DON'T DO)
REVOKE SELECT, INSERT, UPDATE, DELETE ON MEM_TABLE TO MWS CASCADE 


------------ TCL -------------

SELECT * FROM MEM_TABLE 

--BEGIN TRAN -> DML 명령어 -> COMMIT 
-- 완전히 확정이 된 이후에 COMMIT을 실행. COMMIT을 실행하지 않으면 앞 명령 수행 X

USE EDU
BEGIN TRAN 
DELETE MEM_TABLE WHERE NAME = 'Judith'
SELECT * FROM MEM_TABLE 
--ROLLBACK
--SELECT * FROM MEM_TABLE 

COMMIT 
SELECT * FROM MEM_TABLE 



-- ROLLBACK DELETE
USE EDU
BEGIN TRAN
SELECT * FROM MEM_TABLE 
DELETE MEM_TABLE 
SELECT * FROM MEM_TABLE 
ROLLBACK --앞의 DELETE를 취소 
SELECT * FROM MEM_TABLE 


-- SAVEPOINT(ROLLBACK TRAN) : ROLLBACK이 아예 실행 전으로 돌아가는 거라면, SAVEPOINT는 일부 실행 이전으로 돌아갈 수 있다.
USE EDU
BEGIN TRAN

SAVE TRAN S1
INSERT INTO MEM_TABLE VALUES ('A010', 'Momo', 'F', 26, 10000, '2022-05-28', 0)

SAVE TRAN S2
UPDATE MEM_TABLE SET AGE = 36 WHERE ID = 'A010'

SAVE TRAN S3
DELETE MEM_TABLE WHERE ID = 'A004'

SELECT * FROM MEM_TABLE  --IS THIS THE END? NO!

--S3 ROLLBACK 
ROLLBACK TRAN S3
SELECT * FROM MEM_TABLE 

--S2 ROLLBACK
ROLLBACK TRAN S2
SELECT * FROM MEM_TABLE 

--S1 ROLLBACK
ROLLBACK TRAN S1
SELECT * FROM MEM_TABLE

-- FINAL (단, S3 > S2 > S1 순서를 지켜야함. S1부터 하거나 이럼 안됨, 에러남)
SELECT *
FROM MEM_TABLE 

